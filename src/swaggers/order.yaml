openapi: 3.0.0
info:
  title: Order Management API
  description: API for managing orders in the coffee store application.
  version: 1.0.0
tags:
  - name: Orders
    description: Order management

paths:
  /orders:
    post:
      summary: Add an item to an existing order
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                  description: ID of the product to add
                quantity:
                  type: integer
                  description: Quantity of the product
                ristretto:
                  type: string
                  description: Ristretto option
                  enum: [normal, strong]  # Adjust options as needed
                isOnsite:
                  type: boolean
                  description: Whether the order is for onsite consumption
                size:
                  type: string
                  description: Size of the product
                  enum: [small, medium, large]  # Adjust options as needed
                time_prepare:
                  type: string
                  description: Time prepared for the order
                prepare_time:
                  type: string
                  description: Actual preparation time
      responses:
        "201":
          description: Order item added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Order item added successfully!
                  orderItem:
                    type: object
                    properties:
                      productId:
                        type: integer
                      productName:
                        type: string
                      productImage:
                        type: string
                      quantity:
                        type: integer
                      ristretto:
                        type: string
                      isOnsite:
                        type: boolean
                      size:
                        type: string
                      time_prepare:
                        type: string
                      prepare_time:
                        type: string
                      total_amount:
                        type: number
                        format: float
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  message:
                    type: string
                    example: Error message detailing the issue
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail
                  message:
                    type: string
                    example: Product with ID 123 not found.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  message:
                    type: string
                    example: Server error.

  /orders/{orderId}:
    put:
      summary: Update an existing order
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID of the order to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_address:
                  type: string
                discount:
                  type: number
                  format: float
      responses:
        "200":
          description: Order updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Order updated successfully!
                  order:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      storeId:
                        type: integer
                      shipping_address:
                        type: string
                      discount:
                        type: number
                        format: float
                      status:
                        type: string
                      total_price:
                        type: number
                        format: float
                      orderItems:
                        type: array
                        items:
                          type: object
                          properties:
                            productId:
                              type: integer
                            quantity:
                              type: integer
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  message:
                    type: string
                    example: Error message detailing the issue
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Fail
                  message:
                    type: string
                    example: Order not found.
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Error
                  message:
                    type: string
                    example: Server error.
